import random
import os
import time
from colorama import Fore, Style, init

# Inicializar a colorama
init(autoreset=True)

# Classe que representa uma empresa (jogador)
class Empresa:
    def __init__(self, nome):
        self.nome = nome
        self.saldo = 1000.0  # Saldo inicial de R$ 1.000,00

    def investir(self, marketing, pd, producao, multiplicadores):
        # C√°lculo dos retornos com base nos multiplicadores do cen√°rio (oculto para os jogadores)
        retorno_marketing = marketing * multiplicadores['marketing']
        retorno_pd = pd * multiplicadores['pd']
        retorno_producao = producao * multiplicadores['producao']
        
        # Simula√ß√£o do c√°lculo do retorno com barra de progresso
        print(f"{Fore.WHITE}Calculando retorno sobre os investimentos...", end="", flush=True)
        for _ in range(3):
            time.sleep(0.5)
            print(".", end="", flush=True)
        print("\n")
        
        # O saldo √© atualizado com o retorno dos investimentos
        self.saldo += retorno_marketing + retorno_pd + retorno_producao

# Fun√ß√£o para exibir o texto com efeito de digita√ß√£o
def digitar_texto(texto, velocidade=0.02):
    for caractere in texto:
        print(caractere, end='', flush=True)
        time.sleep(velocidade)
    print()

# Fun√ß√£o para exibir o ranking das empresas com efeito de digita√ß√£o apenas na listagem
def exibir_ranking(empresas):
    empresas_ordenadas = sorted(empresas, key=lambda x: x.saldo, reverse=True)
    print("\n" + Fore.GREEN + "‚ïê" * 50)
    print(Fore.WHITE + "üèÜ  RANKING DAS EMPRESAS  üèÜ".center(50))
    print(Fore.GREEN + "‚ïê" * 50)
    for i, empresa in enumerate(empresas_ordenadas, start=1):
        # Aplicar trof√©us para os tr√™s primeiros
        if i == 1:
            icone = "ü•á"
        elif i == 2:
            icone = "ü•à"
        elif i == 3:
            icone = "ü•â"
        else:
            icone = "  "  # Adicionar dois espa√ßos para alinhar corretamente
        digitar_texto(f"{icone} {i}. {empresa.nome:<20} - Saldo: R${empresa.saldo:,.2f}")
    print(Fore.GREEN + "‚ïê" * 50)

# Fun√ß√£o para limpar a tela
def limpar_tela():
    os.system('cls' if os.name == 'nt' else 'clear')

# Fun√ß√£o que exibe a tela inicial com arte ASCII e cores
def tela_inicial():
    limpar_tela()
    print(Fore.GREEN + "‚ïê" * 50)
    print("üíº CEO SIMULATOR üíº".center(50))
    print(Fore.GREEN + "‚ïê" * 50)
    print(Fore.YELLOW + "üìå COMO FUNCIONA O JOGO:")
    print("Voc√™ √© o CEO de uma empresa em um mercado altamente competitivo.")
    print("A cada rodada, voc√™ far√° decis√µes estrat√©gicas sobre onde investir seu or√ßamento.")
    print("\n√Åreas de investimento dispon√≠veis:")
    print(Fore.YELLOW + "  ‚û§ Marketing: Aumenta a visibilidade da empresa.")
    print(Fore.YELLOW + "  ‚û§ Pesquisa e Desenvolvimento (P&D): Gera inova√ß√£o e novos produtos.")
    print(Fore.YELLOW + "  ‚û§ Produ√ß√£o: Aumenta a capacidade produtiva para atender a demanda.")
    print(Fore.GREEN + "‚ïê" * 50)
    input("Pressione Enter para iniciar o jogo...")

# Fun√ß√£o que cria cen√°rios sem repeti√ß√£o para cada rodada
def gerar_cenarios_unicos(num_rodadas):
    cenarios_disponiveis = [
        {"descricao": "Uma inesperada explos√£o na demanda est√° tomando o mercado de surpresa. O setor inteiro est√° se ajustando √† nova realidade.",
         "marketing": 1.2, "pd": 1.1, "producao": 1.5},
        
        {"descricao": "A competi√ß√£o atingiu n√≠veis intensos, e as grandes jogadas est√£o acontecendo. Cada movimento no mercado √© acompanhado de perto.",
         "marketing": 1.3, "pd": 0.9, "producao": 0.8},
        
        {"descricao": "O mercado parece estagnado, com produtos familiares saturando as prateleiras. As empresas procuram desesperadamente algo que se destaque.",
         "marketing": 1.0, "pd": 1.3, "producao": 0.8},
        
        {"descricao": "Com os custos de produ√ß√£o disparando, a press√£o financeira amea√ßa os lucros. A cautela se torna uma necessidade constante.",
         "marketing": 0.9, "pd": 1.1, "producao": 0.8},
        
        {"descricao": "As inova√ß√µes tecnol√≥gicas est√£o dominando as conversas em todo o setor, e quem liderar essa corrida pode ditar as regras do futuro.",
         "marketing": 1.1, "pd": 1.5, "producao": 1.0},
        
        {"descricao": "Uma nova plataforma social emergiu, capturando a aten√ß√£o global. O mundo digital est√° mais vibrante e imprevis√≠vel do que nunca.",
         "marketing": 1.3, "pd": 1.1, "producao": 1.0},
        
        {"descricao": "Uma startup ousada acaba de fazer um grande lan√ßamento, atraindo a aten√ß√£o da m√≠dia. Todos os olhos est√£o voltados para o pr√≥ximo passo.",
         "marketing": 1.3, "pd": 1.5, "producao": 1.0},
        
        {"descricao": "As taxas de juros ca√≠ram drasticamente, abrindo portas para novas expans√µes. O cen√°rio financeiro est√° em plena transforma√ß√£o.",
         "marketing": 1.0, "pd": 1.2, "producao": 1.7},
        
        {"descricao": "Uma mudan√ßa nas regula√ß√µes governamentais virou o jogo da publicidade. Agora, o mercado se adapta √†s novas regras impostas.",
         "marketing": 0.9, "pd": 1.2, "producao": 1.1},
        
        {"descricao": "O interesse por solu√ß√µes sustent√°veis est√° no auge. As empresas que n√£o se adaptarem a essa realidade podem ser deixadas para tr√°s.",
         "marketing": 1.1, "pd": 1.3, "producao": 1.0},
        
        {"descricao": "Um surto inflacion√°rio pegou todos de surpresa, elevando os custos e for√ßando mudan√ßas r√°pidas na estrat√©gia de neg√≥cios.",
         "marketing": 0.9, "pd": 0.9, "producao": 0.7},
        
        {"descricao": "Em meio a uma recess√£o, os consumidores est√£o mais cautelosos do que nunca. Atrair aten√ß√£o agora exige uma abordagem estrat√©gica √∫nica.",
         "marketing": 1.2, "pd": 1.1, "producao": 0.9},
        
        {"descricao": "Novas ferramentas de automa√ß√£o come√ßaram a transformar processos produtivos. Quem se adapta r√°pido, encontra uma vantagem crucial.",
         "marketing": 1.0, "pd": 1.5, "producao": 1.2},
        
        {"descricao": "Mudan√ßas dr√°sticas nas pol√≠ticas de publicidade online est√£o impactando como as empresas podem alcan√ßar seus clientes.",
         "marketing": 1.1, "pd": 1.4, "producao": 1.2},
        
        {"descricao": "Os consumidores est√£o cada vez mais exigentes em rela√ß√£o √† qualidade dos produtos. Adaptar-se a essa nova expectativa se tornou prioridade.",
         "marketing": 1.1, "pd": 1.3, "producao": 1.1},
        
        {"descricao": "Os custos dos materiais subiram abruptamente, for√ßando as empresas a revisarem suas opera√ß√µes em busca de efici√™ncia.",
         "marketing": 0.9, "pd": 1.5, "producao": 0.8},
        
        {"descricao": "Boicotes sociais contra corpora√ß√µes t√™m ganhado for√ßa. A imagem p√∫blica das empresas nunca foi t√£o importante.",
         "marketing": 1.6, "pd": 1.0, "producao": 1.1},
        
        {"descricao": "Uma descoberta revolucion√°ria acabou de ser anunciada, prometendo mudar os rumos do setor. As implica√ß√µes s√£o imensas para quem se adaptar primeiro.",
         "marketing": 1.1, "pd": 1.9, "producao": 1.3},
        
        {"descricao": "As vendas online est√£o crescendo a uma taxa sem precedentes, mudando rapidamente as din√¢micas de mercado. O e-commerce est√° em expans√£o.",
         "marketing": 1.7, "pd": 1.3, "producao": 1.0},
        
        {"descricao": "Desastres ambientais est√£o afetando cadeias de suprimentos globais. As empresas precisam repensar sua abordagem para manter a produ√ß√£o vi√°vel.",
         "marketing": 0.9, "pd": 1.5, "producao": 0.9},
        
        {"descricao": "O aumento na ado√ß√£o de plataformas de streaming est√° mudando como as empresas anunciam, com novas oportunidades surgindo.",
         "marketing": 1.2, "pd": 1.2, "producao": 1.1},
        
        {"descricao": "Os custos de energia ca√≠ram repentinamente, criando uma oportunidade √∫nica para rever as opera√ß√µes e cortar despesas.",
         "marketing": 1.0, "pd": 1.0, "producao": 1.8},
        
        {"descricao": "O governo anunciou subs√≠dios generosos para empresas inovadoras. Novas portas se abriram.",
         "marketing": 1.0, "pd": 2.0, "producao": 1.2},
        
        {"descricao": "Uma onda de incerteza tomou conta do mercado. Empresas precisam se reposicionar rapidamente para restaurar a confian√ßa dos consumidores.",
         "marketing": 1.8, "pd": 1.3, "producao": 1.0}
    ]
    return random.sample(cenarios_disponiveis, num_rodadas)


# Fun√ß√£o principal do jogo
def jogo():
    tela_inicial()
    
    # Perguntar o n√∫mero de jogadores e rodadas
    num_jogadores = int(input("\nQuantos jogadores ir√£o participar (m√°x. 10)? "))
    num_rodadas = int(input("Quantas rodadas ter√° o jogo (m√°x. 10)? "))
    
    # Criar as empresas (jogadores)
    empresas = []
    for i in range(num_jogadores):
        nome_empresa = input(f"Nome da empresa do Jogador {i+1}: ")
        empresas.append(Empresa(nome_empresa))

    # Gerar cen√°rios √∫nicos
    cenarios = gerar_cenarios_unicos(num_rodadas)

    # Rodar o jogo por cada rodada
    for rodada in range(1, num_rodadas + 1):
        limpar_tela()

        # Exibir o ranking fixo no in√≠cio de cada rodada
        exibir_ranking(empresas)

        print(f"\n{Fore.GREEN}{rodada}¬™ RODADA")
        
        # Obter o cen√°rio √∫nico da rodada
        cenario = cenarios[rodada - 1]
        print(Fore.WHITE + f"Cen√°rio: {cenario['descricao']}")
        print(Fore.GREEN + "‚ïê" * 50)
        
        # Ordenar as empresas de acordo com o saldo atual (ranking)
        empresas = sorted(empresas, key=lambda x: x.saldo, reverse=True)

        # Para cada jogador, solicitar os investimentos na ordem do ranking
        for empresa in empresas:
            print(f"\n{Fore.YELLOW}{empresa.nome}, fa√ßa suas escolhas de investimento (Marketing, P&D e Produ√ß√£o):")
            print(Fore.WHITE + f"Saldo dispon√≠vel: R${empresa.saldo:.2f}")
            
            while True:  # La√ßo para garantir que o jogador corrija os valores
                try:
                    # Solicitar os investimentos
                    marketing = float(input(Fore.CYAN + "Investimento em Marketing (R$): "))
                    pd = float(input(Fore.CYAN + "Investimento em P&D (R$): "))
                    producao = float(input(Fore.CYAN + "Investimento em Produ√ß√£o (R$): "))
                except ValueError:
                    print(Fore.RED + "‚ö†Ô∏è Valor inv√°lido! Tente novamente.")
                    continue
                
                # Verificar se os investimentos n√£o ultrapassam o saldo
                total_investido = marketing + pd + producao
                if total_investido > empresa.saldo:
                    print(Fore.RED + "‚ùå Investimento maior que o saldo dispon√≠vel. Tente novamente.")
                else:
                    # Se os valores forem v√°lidos, sair do la√ßo
                    break

            # Atualizar saldo com os retornos (sem mostrar os multiplicadores)
            empresa.investir(marketing, pd, producao, cenario)

        # Exibir ranking ao final da rodada (fixo no in√≠cio da pr√≥xima)
        input(Fore.YELLOW + "\nRodada conclu√≠da! Pressione Enter para ver o ranking atualizado...")

    # Exibir o vencedor ao final do jogo
    limpar_tela()
    exibir_ranking(empresas)
    vencedor = max(empresas, key=lambda x: x.saldo)
    print(Fore.YELLOW + f"\nüéâ A empresa vencedora √©: {vencedor.nome} com um saldo final de R${vencedor.saldo:.2f}!")
    print(Fore.GREEN + "‚ïê" * 50)

# Executar o jogo
if __name__ == "__main__":
    jogo()
